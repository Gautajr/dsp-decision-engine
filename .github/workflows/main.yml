name: Build and Deploy

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  # build-package:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.12.4'

  #     - name: Install build dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install build

  #     - name: Build Python package
  #       run: python -m build

  #     - name: Upload Python package
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: python-package
  #         path: dist/*

  build-docs:
    runs-on: ubuntu-latest
    # needs: build-package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/all.txt
          pip install .

      - name: Build documentation
        run: |
          cd docs
          make html
      
      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build/html/*

  #     - name: Deploy documentation to GitHub Pages
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: docs/_build/html
  #         publish_branch: gh-pages

 build-docker:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker CLI
        uses: docker/setup-docker-action@v1

      - name: Build Docker image
        run: |
          docker build -t capitec/engine:latest -f docker/Dockerfile .

  # upload-release:
  #   runs-on: ubuntu-latest
  #   needs: build-package
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install Twine
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install twine

      # - name: Upload Python package to PyPI
      #   run: |
      #     python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build-package
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Upload Python package to GitHub Releases
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: dist/*
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
