name: Build and Deploy

on:
  push:
    branches:
      - main
      - dev
      - release/*
      - feature/*
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-package:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build versioneer black pytest

      - name: Format code with Black
        run: black --check .

      - name: Run tests
        run: pytest

      - name: Build Python package
        run: python -m build

      - name: Upload Python package
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

  build-docs:
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/all.txt
          pip install .

      - name: Build documentation
        run: |
          cd docs
          make html
      
      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build/html/*

  build-docker:
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker image
        run: |
          docker build -t capitec/engine:latest -f docker/Dockerfile .

  upload-release:
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Upload Python package to PyPI
        run: |
          python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*

  release:
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build versioneer

      - name: Build Python package
        run: python -m build

      - name: Build Docker image
        run: |
          docker build -t capitec/engine:rc -f docker/Dockerfile .

      - name: Upload Python package
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

      - name: Upload Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: capitec/engine:rc

      - name: Create RC tag
        run: |
          git tag -a "rc-$(python setup.py --version)" -m "Release candidate $(python setup.py --version)"
          git push origin "rc-$(python setup.py --version)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post-merge:
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Format code with Black
        run: black --check .

      - name: Run tests
        run: pytest

      - name: Build Python package
        run: python -m build

      # - name: Upload Python package to GitHub Releases
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: dist/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Deploy documentation to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: docs/_build/html
      #     publish_branch: gh-pages
